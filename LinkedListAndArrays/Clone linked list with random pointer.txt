/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null){
            return head;
        }
        Node temp = head;
        while(temp!=null){
            Node next = temp.next;
            Node newNode = new Node(temp.val);
            temp.next = newNode;
            newNode.next = next;
            temp = next;
        }
        temp = head;
        while(temp!=null){
            temp.next.random = temp.random == null ? null : temp.random.next;
            temp = temp.next.next;
        }
        temp = head;
        Node o = head.next;
        Node temp2 = head.next;
        while(temp!=null){
            temp.next = temp2.next;
            if(temp2.next != null){
                temp2.next = temp2.next.next;
            }
            temp = temp.next;
            temp2 = temp2.next;
        }
        return o;
    }
}